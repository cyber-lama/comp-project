version: '3'

services:
  nginx:
    image: nginx:1.17-alpine
    restart: unless-stopped
    environment:
      NGINX_HOST: ${APP_BASE_URL}
      NGINX_PORT: 80
    ports:
      - 80:80
    depends_on:
      - app
      - db
    volumes:
      - ./docker/conf/nginx/project.conf:/etc/nginx/conf.d/project.template
      - ./:/var/www
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/project.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
  app:
    build:
      args:
        user: ${DOCKER_USER}
        uid: ${DOCKER_UID}
      context: ./
      dockerfile: ./docker/Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker/conf/php/project.ini:/usr/local/etc/php/conf.d/project.ini
  db:
    image: mysql:5.7
    restart: unless-stopped
    volumes:
      - ./docker/db:/var/lib/mysql
      - ./docker/conf/db/conf.cnf:/etc/mysql/conf.d/project.cnf
      - ./docker/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - 3306:3306
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - ./docker/redis:/var/lib/redis